{"version":3,"file":"extension.js","sources":["../build/compiled/fileExplorer.js","../build/compiled/extension.js"],"sourcesContent":["import { useState } from \"react\";\nimport { TreeItem, TreeItemState } from \"@hare-ide/hare\";\nexport class Explorer {\n    selectedCallback;\n    selected;\n    context;\n    constructor(context) {\n        const [selected, setSelected] = useState([]);\n        this.selectedCallback = setSelected;\n        this.selected = selected;\n        this.context = context;\n    }\n    async getChildren(element) {\n        var childs = [];\n        var url = \"/home/javier\";\n        if (element !== undefined) {\n            url = element.url;\n        }\n        await this.context.readDir(url).then((content) => {\n            content.forEach((element) => {\n                childs.push({\n                    contextValue: element.context_value,\n                    fileName: element.file_name,\n                    url: element.url,\n                });\n            });\n        });\n        if (childs.length === 0) {\n            return undefined;\n        }\n        return childs;\n    }\n    async getTreeItem(element) {\n        const treeItem = new TreeItem(element.fileName, (element.contextValue === \"file\") ? TreeItemState.None : TreeItemState.Collapsed);\n        treeItem.contextValue = element.contextValue;\n        treeItem.id = element.url;\n        treeItem.tooltip = element.url;\n        // treeItem.description = element.contextValue;\n        if (treeItem.contextValue === \"file\") {\n            treeItem.iconPath = \"/home/javier/.hare/extensions/hare.explorer/media/file.svg\";\n        }\n        else {\n            treeItem.iconPath = \"/home/javier/.hare/extensions/hare.explorer/media/folder.svg\";\n        }\n        if (treeItem.contextValue === \"file\") {\n            // treeItem.command = () => {\n            // \treadFile(element.url).then((content:string) => {\n            // \t\tconsole.log(content)\n            // \t})\n            // }\n        }\n        else {\n            // treeItem.command = () => {}\n        }\n        return treeItem;\n    }\n}\n//# sourceMappingURL=fileExplorer.js.map","import { Explorer } from \"./fileExplorer\";\nexport function activate(context) {\n    context.window.registerTreeViewProvider(\"fileExplorer\", new Explorer(context));\n}\n// this method is called when your extension is deactivated\nexport function deactivate() { }\n//# sourceMappingURL=extension.js.map"],"names":["Explorer","selectedCallback","selected","context","constructor","setSelected","useState","this","getChildren","element","childs","url","undefined","await","readDir","then","content","forEach","push","contextValue","context_value","fileName","file_name","length","getTreeItem","treeItem","TreeItem","TreeItemState","None","Collapsed","id","tooltip","iconPath","activate","window","registerTreeViewProvider","deactivate"],"mappings":"qFAEaA,SACTC,iBACAC,SACAC,QACAC,YAAYD,GACR,GAAM,CAACD,EAAUG,GAAeC,SAAS,EAAE,EAC3CC,KAAKN,iBAAmBI,EACxBE,KAAKL,SAAWA,EAChBK,KAAKJ,QAAUA,CAClB,CACDK,kBAAkBC,GACd,IAAIC,EAAS,GACTC,EAAM,eAaV,GAZgBC,KAAAA,IAAZH,IACAE,EAAMF,EAAQE,KAElBE,MAAMN,KAAKJ,QAAQW,QAAQH,CAAG,EAAEI,KAAK,IACjCC,EAAQC,QAAQ,IACZP,EAAOQ,KAAK,CACRC,aAAcV,EAAQW,cACtBC,SAAUZ,EAAQa,UAClBX,IAAKF,EAAQE,GACjC,CAAiB,CACjB,CAAa,CACb,CAAS,EACqB,IAAlBD,EAAOa,OAGX,OAAOb,CACV,CACDc,kBAAkBf,GACd,IAAMgB,EAAW,IAAIC,SAASjB,EAAQY,SAAoC,SAAzBZ,EAAQU,aAA2BQ,cAAcC,KAAOD,cAAcE,SAAS,EAqBhI,OApBAJ,EAASN,aAAeV,EAAQU,aAChCM,EAASK,GAAKrB,EAAQE,IACtBc,EAASM,QAAUtB,EAAQE,IAGvBc,EAASO,SADiB,SAA1BP,EAASN,aACW,6DAGA,+DAYjBM,CACV,CACL,CCvDO,SAASQ,SAAS9B,GACrBA,EAAQ+B,OAAOC,yBAAyB,eAAgB,IAAInC,SAASG,CAAO,CAAC,CACjF,CAEO,SAASiC"}